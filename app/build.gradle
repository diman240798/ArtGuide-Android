apply plugin: 'com.android.application'

ext {
    versionFile = new File(project.rootDir, 'version.properties')
    calculateVersionName = {
        def version = readVersion()
        return "${version['major']}.${version['minor']}.${version['build']}"
    }
    calculateVersionCode = {
        def version = readVersion()
        def major = version['major'] as int // 1..âˆž
        def minor = version['minor'] as int // 0..99
        def build = version['build'] as int // 0..999
        return (major * 100 + minor) * 1000 + build
    }
}


Properties readVersion() {
    def version = new Properties()
    def stream
    try {
        stream = new FileInputStream(versionFile)
        version.load(stream)
    } catch (FileNotFoundException ignore) {
    } finally {
        if (stream != null) stream.close()
    }
    // safety defaults in case file is missing
    if(!version['major']) version['major'] = "1"
    if(!version['minor']) version['minor'] = "0"
    if(!version['build']) version['build'] = "0"
    return version
}

void incrementVersionNumber() {
    def version = readVersion()

    // careful with the types, culprits: "9"++ = ":", "9" + 1 = "91"
    def build = version['build'] as int
    build++
    version['build'] = build.toString()

    def stream = new FileOutputStream(versionFile)
    try {
        version.store(stream, null)
    } finally {
        stream.close()
    }
}

task incrementVersion {
    description "Increments build counter in ${versionFile}"
    doFirst {
        incrementVersionNumber()
    }
}

if (plugins.hasPlugin('android') || plugins.hasPlugin('android-library')) {
    android {
        compileSdkVersion 26

        defaultConfig {
            versionName = calculateVersionName()
            versionCode = calculateVersionCode()
            applicationId "com.swg_games_lab.nanicki.artguide"
            minSdkVersion 21
            targetSdkVersion 21
            //testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        }

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        afterEvaluate {
            def autoIncrementVariant = { variant ->
                if (variant.buildType.name == buildTypes.release.name) { // don't increment on debug builds
                    variant.preBuild.dependsOn incrementVersion
                    incrementVersion.doLast {
                        variant.mergedFlavor.versionName = calculateVersionName()
                        variant.mergedFlavor.versionCode = calculateVersionCode()
                    }
                }
            }
            if (plugins.hasPlugin('android')) {
                applicationVariants.all { variant -> autoIncrementVariant(variant) }
            }
            if (plugins.hasPlugin('android-library')) {
                libraryVariants.all { variant -> autoIncrementVariant(variant) }
            }
        }
    }
}

dependencies {
    implementation 'com.android.support:recyclerview-v7:26.1.0'
    implementation 'com.android.support:cardview-v7:26.1.0'
    //implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation fileTree(include: ['*.aar'], dir: 'libs')
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'
    implementation 'com.android.support:design:26.1.0'
    // Open Street Maps
    implementation 'org.osmdroid:osmdroid-android:6.0.0'
    implementation 'org.osmdroid:osmdroid-wms:6.0.0'
    implementation 'org.osmdroid:osmdroid-mapsforge:6.0.0'
    implementation 'org.osmdroid:osmdroid-geopackage:6.0.0'


    implementation 'com.google.code.gson:gson:2.8.0'
    implementation 'com.squareup.okhttp3:okhttp:3.7.0'

}
//implementation 'org.osmdroid:osmdroid-third-party:6.0.0'
//implementation 'com.google.android.gms:play-services-location:12.0.0'
//implementation 'com.github.jd-alexander:library:1.1.0'
//'com.android.support.test.espresso:espresso-core:3.0.1'testImplementation 'junit:junit:4.12'
// androidTestImplementation 'com.android.support.test:runner:1.0.1'
// androidTestImplementation
//compile 'com.nihaskalam.android:progress-button:1.0.1'

//
   /* implementation files('libs/osmbonuspack_6.5.1 - Copy.jar')
    implementation files(name:'libs/osmbonuspack_v6.5.1', ext:'aar')*/

    /*compile 'com.github.MKergall.osmbonuspack:MapsForgeForOsmdroid:v5.7'
    compile 'org.osmdroid:osmdroid-android:6.0.1'
    compile "com.android.support:support-v4:23.4.0"
    compile 'org.apache.commons:commons-lang3:3.3.4'
    compile 'com.google.code.gson:gson:2.8.0'
    compile 'com.squareup.okhttp3:okhttp:3.7.0'*/

